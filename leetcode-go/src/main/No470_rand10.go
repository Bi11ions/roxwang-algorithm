package main

import "math/rand"

// Rand10 已有方法 rand7 可生成 1 到 7 范围内的均匀随机整数，试写一个方法 rand10 生成 1 到 10 范围内的均匀随机整数。
//
// rand7() 等概率地产生1，2，3，4，5，6，7。要想得到 rand10() 即等概率的生成 1-10 。解题思路是先构造一个 randN()，
//		这个 N 必须是 10 的整数倍，然后 randN % 10 就可以得到 rand10() 了。
//		所以可以从 rand7() 先构造出 rand49()，再把 rand49() 中大于等于 40 的都过滤掉，这样就得到了 rand40()，在对 10 取余即可。
// 具体构造步骤，rand7() --> rand49() --> rand40() --> rand10()：
// 		rand7() 等概率地产生 1,2,3,4,5,6,7.
// 		rand7() - 1 等概率地产生 [0,6].
// 		(rand7() - 1) *7 等概率地产生 0, 7, 14, 21, 28, 35, 42
// 		(rand7() - 1) * 7 + (rand7() - 1) 等概率地产生 [0, 48] 这 49 个数字
// 如果步骤 4 的结果大于等于 40，那么就重复步骤 4，直到产生的数小于 40
// 把步骤 5 的结果 mod 10 再加 1， 就会等概率的随机生成 [1, 10]
// 这道题可以推广到生成任意数的随机数问题。用 randN() 实现 randM()，M>N。步骤如下：
// 		用 randN() 先实现 randX()，其中 X ≥ M，X 是 M 的整数倍。如这题中的 49 > 10；
// 		再用 randX() 生成 randM()，如这题中的 49 —> 40 —> 10。
func Rand10() int {
	rand40 := 40
	for rand40 >= 40 {
		rand40 = (rand7()-1)*7 + rand7() - 1
	}

	return rand40%10 + 1
}

func rand7() int {
	return rand.Intn(7)
}
